name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: ${{ secrets.SAUSAGE_STORE_NAMESPACE}}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest

      steps:

        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          # Установка сборщика контейнеров Docker:
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker 
          # Авторизация на Docker Hub:
          uses: docker/login-action@v2
          # При помощи with передаём в action параметры username и password:
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            # Хорошо ли держать логин и пароль прямо в коде workflow?
            # Нет, это нехорошо. Хранить пароль надо в Secrets.

        - name: Push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            # Параметр context: ./backend/ указывает, что нужный Dockerfile 
            # находится в ./backend/
            context: ./backend/
            # Параметр push: true указывает, что образ нужно не только собрать,
            # но и отправить на Docker Hub:
            push: true
            # В параметре tags задаётся название и тег для образа.
            # Для каждого пересобранного образа 
            # устанавливаем тег latest, чтобы потом
            # на сервере и в docker-compose.yml не указывать версию образа:
            tags: ${{ secrets.DOCKER_USER }}/sausage-backend:latest
            build-args: |
              VERSION=${{ github.sha }}
              
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/sausage-frontend:latest

        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/sausage-backend-report:latest

  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install helm-push plugin
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: Helm Lint
        run: helm lint ./sausage-store-chart

      - name: Bump Helm Chart Version
        id: set_version
        run: |
          CHART_PATH="./sausage-store-chart/Chart.yaml"
          CURRENT=$(grep '^version:' "$CHART_PATH" | awk '{print $2}')
          NEXT=$(echo "$CURRENT" | awk -F. '{$NF += 1; print}' OFS='.')
          echo "Updating chart version: $CURRENT → $NEXT"
          sed -i "s/^version: .*/version: $NEXT/" "$CHART_PATH"
          echo "NEW_VERSION=$NEXT" >> $GITHUB_OUTPUT

      - name: Package and Push Helm Chart to Nexus
        run: |
          helm dependency update ./sausage-store-chart
          helm package ./sausage-store-chart --destination ./packaged-chart
          helm cm-push ./packaged-chart/sausage-store-*.tgz chartmuseum \
            --username="${{ env.NEXUS_HELM_REPO_USER }}" \
            --password="${{ env.NEXUS_HELM_REPO_PASSWORD }}" \
            --context-path="/repository/B10nicle-sausage-store"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      runs-on: ubuntu-latest
      needs: add_helm_chart_to_nexus

      steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Add Nexus Helm repo
        run: |
          helm repo add nexus ${{ env.NEXUS_HELM_REPO }} \
            --username ${{ env.NEXUS_HELM_REPO_USER }} \
            --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
          helm repo update

      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ env.KUBE_CONFIG }}" > ~/.kube/config
        shell: bash

      - name: Deploy Helm chart
        run: |
          helm upgrade --install sausage-store nexus/sausage-store \
            --namespace ${{ env.SAUSAGE_STORE_NAMESPACE }}